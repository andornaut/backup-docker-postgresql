#!/bin/bash
set -e

usage() {
    echo "$(basename $0) [--help] [--kill] [--host <hostname>] [--container <id>] [backup_file]" >&2
    exit 1
}

OPTS=`getopt -o kh:c: --long help,kill,host:,container: -n $(basename $0) -- "$@"`

[[ $? -eq 0 ]] || usage
eval set -- "$OPTS"
kill_connections=false

while true; do
  case "$1" in
    -c | --container ) container=$2; shift; shift ;;
    -h | --host ) host=$2; shift; shift ;;
    -k | --kill ) kill_connections=true; shift ;;
    --help ) usage; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

[[ $# -lt 2 ]] || usage
[[ $# == 1 ]] && backup_file="${1}" || backup_file="/dev/stdout"

ssh_command=""
if [[ -n "${host}" ]]; then
    ssh_command="ssh ${host} -C"
fi
docker_command=""
if [[ -n "${container}" ]]; then
    docker_command="sudo docker exec -i ${container}"
fi
psql_command="psql -U postgres postgres"
backup_command="pg_dumpall -U postgres"

if ${kill_connections}; then
    ${ssh_command} "${docker_command} ${psql_command} --quiet -c \"SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pid <> pg_backend_pid();\"" >/dev/null 2>&1
fi

${ssh_command} "${docker_command} ${backup_command}|gzip" > ${backup_file}

